---
kind: Namespace
apiVersion: v1
metadata:
  name: invidious
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: invidious-configsecrets
  namespace: invidious
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
  data:
    - secretKey: postgrespassword
      remoteRef:
        key: postgres.cluster01.invidious.owner
        property: password
    - secretKey: postgresuser
      remoteRef:
        key: postgres.cluster01.invidious.owner
        property: username
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: invidious-secrets
#   namespace: invidious
# spec:
#   secretStoreRef:
#     kind: ClusterSecretStore
#     name: 1password
#   target:
#     name: invidious-secrets
#     template:
#       engineVersion: v2
#       data:
#         # App
#         INVIDIOUS_CONFIG: |
#           database_url: postgres://{{ .POSTGRES_USER }}:{{ .POSTGRES_PASS }}@postgres16:5432/invidious
#           check_tables: true
#           port: 3000
#           domain: invidious.<path:stringreplacesecret#domain>
#           https_only: false
#           hmac_key: {{ .HMAC_KEY }}
#         # Postgres Init
#         INIT_POSTGRES_DBNAME: invidious
#         INIT_POSTGRES_HOST: postgres16
#         INIT_POSTGRES_USER: "{{ .POSTGRES_USER }}"
#         INIT_POSTGRES_PASS: "{{ .POSTGRES_PASS }}"
#         INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
#   dataFrom:
#     # - extract:
#     #     key: cloudnative-pg
#     - extract:
#         key: invidious
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: invidious
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  project: default
  source:
    chart: app-template
    repoURL: http://bjw-s.github.io/helm-charts/
    targetRevision: 3.5.1
    helm:
      values: |
        controllers:
          invidious-server:
            strategy: RollingUpdate
            annotations:
              reloader.stakater.com/auto: "true"
            # initContainers:
            #   init-db:
            #     image:
            #       repository: ghcr.io/onedr0p/postgres-init
            #       tag: 16
            #     env:
            #       - name: INIT_POSTGRES_USER
            #         value: invidious_owner_user
            #       - name: INIT_POSTGRES_PASS
            #         valueFrom:
            #           secretKeyRef:
            #             key: postgrespassword
            #             name: invidious-configsecrets
            #       - name: INIT_POSTGRES_SUPER_PASS
            #         valueFrom:
            #           secretKeyRef:
            #             key: postgrespassword
            #             name: invidious-configsecrets
            #       - name: INIT_POSTGRES_HOST
            #         value: "cluster01.postgres"
            #       - name: POSTGRES_PORT
            #         value: "5432"
            #       - name: INIT_POSTGRES_DBNAME
            #         value: "invidious"
            #       - name: TZ
            #         value: "America/New_York"
            #       - name: BASE_URL
            #         value: "https://invidious.<path:stringreplacesecret#domain>"
            containers:
              app:
                image:
                  repository: quay.io/invidious/invidious
                  tag: latest@sha256:6ff95432b1e3b0f21592d581dbe1589c8d8ad2a6dc2792e17cdb102308e438e6
                env:
                  database_url: postgres://{{ .POSTGRES_USER }}:{{ .POSTGRES_PASS }}@cluster01.postgres:5432/invidious
                  check_tables: true
                  port: 3000
                  domain: invidious.<path:stringreplacesecret#domain>
                  https_only: false
                  hmac_key: a95b58c845092c334087e4c02911a14accf50cd3
                resources:
                  requests:
                    cpu: 50m
                    memory: 256Mi
        # service:
        #   app:
        #     controller: invidious
        #     ports:
        #       http:
        #         port: 3000
  destination:
    server: https://kubernetes.default.svc
    namespace: invidious
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
