---
kind: Namespace
apiVersion: v1
metadata:
  name: searxng
---
# Source: searxng/templates/005-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: searxng
  namespace: searxng
  labels:
    app.kubernetes.io/name: "searxng"
    app.kubernetes.io/instance: "searxng"
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: "Helm"
automountServiceAccountToken: true
---
# Source: searxng/templates/006-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: searxng-settings
  namespace: searxng
  labels:
    app.kubernetes.io/name: "searxng"
    app.kubernetes.io/instance: "searxng"
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: "Helm"
data:
  settings.yml: |
    use_default_settings: true
    
    server:
      secret_key: "57dc63125e7eef404481411b99c21fb9a5763b724b0bc88f2440ef373cf94809"
      limiter: false
      image_proxy: true
      port: 8080
      bind_address: "0.0.0.0"
    
    ui:
      static_use_hash: true
    
    search:
      safe_search: 0
      autocomplete: ""
      default_lang: ""
      formats:
        - html
        - json
---
# Source: searxng/templates/006-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: searxng-limiter
  namespace: searxng
  labels:
    app.kubernetes.io/name: "searxng"
    app.kubernetes.io/instance: "searxng"
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: "Helm"
data:
  limiter.toml: |
    [botdetection.ip_limit]
    # activate link_token method in the ip_limit method
    link_token = true
---
# Source: searxng/templates/006-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: searxng-uwsgi
  namespace: searxng
  labels:
    app.kubernetes.io/name: "searxng"
    app.kubernetes.io/instance: "searxng"
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: "Helm"
data:
  uwsgi.ini: |
    [uwsgi]
    # Who will run the code
    uid = searxng
    gid = searxng
    
    # Number of workers (usually CPU count)
    # default value: %k (= number of CPU core, see Dockerfile)
    workers = %k
    
    # Number of threads per worker
    # default value: 4 (see Dockerfile)
    threads = 4
    
    # The right granted on the created socket
    chmod-socket = 666
    
    # Plugin to use and interpreter config
    single-interpreter = true
    master = true
    plugin = python3
    lazy-apps = true
    enable-threads = 4
    
    # Module to import
    module = searx.webapp
    
    # Virtualenv and python path
    pythonpath = /usr/local/searxng/
    chdir = /usr/local/searxng/searx/
    
    # automatically set processes name to something meaningful
    auto-procname = true
    
    # Disable request logging for privacy
    disable-logging = true
    log-5xx = true
    
    # Set the max size of a request (request-body excluded)
    buffer-size = 8192
    
    # No keep alive
    # See https://github.com/searx/searx-docker/issues/24
    add-header = Connection: close
    
    # uwsgi serves the static files
    static-map = /static=/usr/local/searxng/searx/static
    # expires set to one day
    static-expires = /* 86400
    static-gzip-all = True
    offload-threads = 4
---
# Source: searxng/templates/004-service.yaml
# apiVersion: v1
# kind: Service
# metadata:
#   name: searxng
#   labels:
#     app.kubernetes.io/name: "searxng"
#     app.kubernetes.io/instance: "searxng"
#     app.kubernetes.io/version: "1.0.0"
#     app.kubernetes.io/managed-by: "Helm"
# spec:
#   type: ClusterIP
#   ports:
#     - port: 8080
#       targetPort: http
#       protocol: TCP
#       name: http
#   selector:
#     app.kubernetes.io/name: "searxng"
#     app.kubernetes.io/instance: "searxng"
---
# Source: searxng/templates/001-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: searxng
  namespace: searxng
  labels:
    app.kubernetes.io/name: "searxng"
    app.kubernetes.io/instance: "searxng"
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: "Helm"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "searxng"
      app.kubernetes.io/instance: "searxng"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "searxng"
        app.kubernetes.io/instance: "searxng"
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/managed-by: "Helm"
    spec:
      serviceAccountName: searxng
      securityContext:
        {}
      containers:
        - name: searxng
          securityContext:
            {}
          image: "searxng/searxng:latest"
          imagePullPolicy: 
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
            - mountPath: /etc/searxng/settings.yml
              name: searxng-settings
              subPath: settings.yml
              readOnly: true
            - mountPath: /etc/searxng/limiter.toml
              name: searxng-limiter
              subPath: limiter.toml
              readOnly: true
            - mountPath: /etc/searxng/uwsgi.ini
              name: searxng-uwsgi
              subPath: uwsgi.ini
              readOnly: true
      volumes:
        - name: searxng-settings
          configMap:
            name: searxng-settings
        - name: searxng-limiter
          configMap:
            name: searxng-limiter
        - name: searxng-uwsgi
          configMap:
            name: searxng-uwsgi

# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: searxng
#   namespace: argocd
#   annotations:
#     argocd.argoproj.io/sync-wave: "-1"
#     argocd.argoproj.io/configMapPolicy: "create"
# spec:
#   project: default
#   source:
#     chart: app-template
#     repoURL: http://bjw-s.github.io/helm-charts/
#     targetRevision: 3.5.1
#     helm:
#       values: |
#         controllers:
#           searxng:
#             annotations:
#               reloader.stakater.com/auto: "true"
#             containers:
#               searxng:
#                 image:
#                   repository: docker.io/searxng/searxng
#                   tag: 2024.6.30-39aaac40d@sha256:149477f50e9fd7a90bd1455009b332433d65a9beeb0e0a6f9a4bdc11a860c0b6
#                 env:
#                   TZ: America/New_York
#                   SEARXNG_BASE_URL: https://search.<path:stringreplacesecret#domain>
#                   SEARXNG_URL: https://search.<path:stringreplacesecret#domain>
#                   SEARXNG_PORT: 8080
#                 resources:
#                   requests:
#                     cpu: 10m
#                     memory: 256Mi
#                   limits:
#                     memory: 2000Mi
#                 config:
#                   settings:
#                     enabled: true
#                     data: |-
#                       use_default_settings: true

#                       search:
#                         safe_search: 0
#                         autocomplete: ""
#                         default_lang: ""
#                         formats:
#                           - html
#                           - json
#         service:
#             app:
#               controller: searxng
#               type: LoadBalancer
#               ports:
#                 http:
#                   port: 8080

#         persistence:
#           config: 
#             enabled: true
#             existingClaim: searxng-configmap
#             advancedMounts:
#               searxng:
#                 app:
#                   - path: /etc/searxng
#                   - path: /etc/searxng/settings.yml
#                   - path: /etc/searxng/limiter.toml
#   destination:
#     server: https://kubernetes.default.svc
#     namespace: searxng
#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: searxng
  name: searxng-configmap
  namespace: searxng
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 2Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: searxng-ingress
  namespace: searxng
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: search.<path:stringreplacesecret#domain>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: searxng
            port:
              number: 8080
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: searxng-http
  namespace: searxng
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  hostnames:
  - "search.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: searxng
      port: 8080
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: searxng
  namespace: searxng
  annotations:
    external-dns.custom/type: private
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  endpoints:
    - dnsName: search.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "false"