---
kind: Namespace
apiVersion: v1
metadata:
  name: piped
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: piped
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  project: default
  source:
    chart: app-template
    repoURL: http://bjw-s.github.io/helm-charts/
    targetRevision: 3.5.1
    helm:
      values: |
        defaultPodOptions:
        automountServiceAccountToken: false
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          fsGroupChangePolicy: "OnRootMismatch"

        controllers:
          backend:
            strategy: RollingUpdate
            annotations:
              secret.reloader.stakater.com/reload: piped-secret

            containers:
              app:
                image:
                  repository: 1337kavin/piped
                  tag: latest@sha256:18e77857414236edc7245bebb3fb8ab3ac49c44bd76701bfce24f6ba0170d4b8
                env:
                  API_URL: https://piped-api.<path:stringreplacesecret#domain>
                  COMPROMISED_PASSWORD_CHECK: true
                  DISABLE_REGISTRATION: true
                  FEED_RETENTION: 30
                  FRONTEND_URL: https://piped.<path:stringreplacesecret#domain>
                  HTTP_WORKERS: 4
                  MATRIX_SERVER: https://matrix-client.matrix.org
                  PORT: 8080
                  PROXY_PART: https://piped-proxy.<path:stringreplacesecret#domain>
                  SENTRY_DSN:
                  hibernate.connection.driver_class: org.postgresql.Driver
                  hibernate.connection.url: jdbc:postgresql://{{ index . "host" }}:5432/{{ index . "dbname" }}
                  hibernate.connection.username: {{ index . "user" }}
                  hibernate.connection.password: {{ index . "password" }}
                probes:
                  liveness:
                    enabled: true
                  readiness:
                    enabled: true
                resources:
                  requests:
                    cpu: 10m
                    memory: 500Mi
                  limits:
                    memory: 2000Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  seccompProfile:
                    type: RuntimeDefault

          frontend:
            strategy: RollingUpdate

            containers:
              app:
                image:
                  repository: ghcr.io/bjw-s-labs/piped-frontend
                  tag: 2024.11.28@sha256:3d1d833836847dbd77d0d0cc80a91b394e162d0664018a8136026657781e15d0
                env:
                  BACKEND_HOSTNAME: piped-api.<path:stringreplacesecret#domain>
                probes:
                  liveness:
                    enabled: true
                  readiness:
                    enabled: true
                resources:
                  requests:
                    cpu: 10m
                    memory: 32Mi
                  limits:
                    memory: 256Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  readOnlyRootFilesystem: true

          ytproxy:
            strategy: RollingUpdate

            containers:
              app:
                image:
                  repository: 1337kavin/piped-proxy
                  tag: latest@sha256:cddde49d7030b18f5ab81577498f5fd9ac67a4b15d36031a9c1a39c22ad22fae
                command:
                  - /app/piped-proxy
                probes:
                  liveness:
                    enabled: true
                  readiness:
                    enabled: true
                resources:
                  requests:
                    cpu: 10m
                    memory: 500Mi
                  limits:
                    memory: 2000Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  seccompProfile:
                    type: RuntimeDefault

          update-subscriptions:
            type: cronjob

            cronjob:
              schedule: "@daily"
              concurrencyPolicy: Forbid
              successfulJobsHistory: 0
              failedJobsHistory: 1

            containers:
              app:
                image:
                  repository: ghcr.io/bjw-s-labs/piped-scripts
                  tag: 0.0.2@sha256:23732d7e0c728670f7281ad1eaa1f7ce4c55e2a7e191195999025eff6689563a
                env:
                  SCRIPT_NAME: update_subscriptions.sh
                  PIPED_BACKEND: http://piped-backend.media.svc.cluster.local:8080
                envFrom:
                  - secretRef:
                      name: piped-db-secret
                resources:
                  requests:
                    cpu: 10m
                    memory: 128Mi
                  limits:
                    memory: 128Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  seccompProfile:
                    type: RuntimeDefault

        service:
          backend:
            controller: backend
            ports:
              http:
                port: 8080
          frontend:
            controller: frontend
            ports:
              http:
                port: 8080
          ytproxy:
            controller: ytproxy
            ports:
              http:
                port: 8080
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: piped-db-secret
  namespace: piped
  labels:
    app.kubernetes.io/part-of: gpiped
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        PGHOST: '{{ index . "host" }}'
        PGUSER: '{{ index . "user" }}'
        PGPASSWORD: '{{ index . "password" }}'
        PGDATABASE: '{{ index . "dbname" }}'
  data:
    - secretKey: index . "host" 
      remoteRef:
        key: piped-db-secret
        property: PGHOST
    - secretKey: index . "user"
      remoteRef:
        key: piped-db-secret
        property: PGUSER
    - secretKey: index . "password"
      remoteRef:
        key: piped-db-secret
        property: PGPASSWORD
    - secretKey: index . "dbname"
      remoteRef:
        key: piped-db-secret
        property: PGDATABASE