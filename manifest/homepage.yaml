---
kind: Namespace
apiVersion: v1
metadata:
  name: homepage
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: homepage
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
  - chart: homepage
    repoURL: http://jameswynn.github.io/helm-charts
    targetRevision: 1.2.3
    helm:
      valuesObject:
      image:
        repository: ghcr.io/benphelps/homepage
        # tag: v0.6.0

      # Enable RBAC. RBAC is necessary to use Kubernetes integration
      enableRbac: false

      serviceAccount:
        # Specify a different service account name
        name: homepage
        # Create service account. Needed when RBAC is enabled.
        create: false

      service:
        main:
          ports:
            http:
              port: 3000

      controller:
        strategy: RollingUpdate
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%

      # Enable the ingress to expose Homepage to the network.
      ingress:
        main:
          enabled: false
          # labels:
          #   # This label will enable discover of this deployment in Homepage
          #   gethomepage.dev/enabled: "true"
          # annotations:
          #   # These annotations will configure how this deployment is shown in Homepage
          #   gethomepage.dev/name: "Homepage"
          #   gethomepage.dev/description: "A modern, secure, highly customizable application dashboard."
          #   gethomepage.dev/group: "A New Group"
          #   gethomepage.dev/icon: "homepage.png"
          # ingressClassName: "nginx"
          # hosts:
          #   - host: &host "homepage.local"
          #     paths:
          #       - path: /
          #         pathType: Prefix
          # tls:
          #   - hosts:
          #       - *host

      # All the config files for Homepage can be specified under their relevant config block.
      config:
        # To use an existing ConfigMap uncomment this line and specify the name
        # useExistingConfigMap: existing-homepage-configmap
        bookmarks:
          - Developer:
              - Github:
                  - abbr: GH
                    href: https://github.com/
        services:
          - My First Group:
              - My First Service:
                  href: http://localhost/
                  description: Homepage is awesome

          - My Second Group:
              - My Second Service:
                  href: http://localhost/
                  description: Homepage is the best

          - My Third Group:
              - My Third Service:
                  href: http://localhost/
                  description: Homepage is ðŸ˜Ž
        widgets:
          - resources:
              # change backend to 'kubernetes' to use Kubernetes integration. Requires RBAC.
              backend: resources
              expanded: true
              cpu: true
              memory: true
          - search:
              provider: duckduckgo
              target: _blank
          ## Uncomment to enable Kubernetes integration
          # - kubernetes:
          #     cluster:
          #       show: true
          #       cpu: true
          #       memory: true
          #       showLabel: true
          #       label: "cluster"
          #     nodes:
          #       show: true
          #       cpu: true
          #       memory: true
          #       showLabel: true
        kubernetes:
          # change mode to 'cluster' to use RBAC service account
          mode: disable
        docker:
        settings:

      persistence:
        logs:
          enabled: true
          type: emptyDir
          mountPath: /app/config/logs

      # resources:
      #   requests:
      #     memory: 10Mi
      #     cpu: 10m
      #   limits:
      #     memory: 200Mi
      #     cpu: 500m
      ---
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: homepage
        namespace: homepage
        labels:
          app.kubernetes.io/name: homepage
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          gethomepage.dev/description: Dynamically Detected Homepage
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Cluster Management
          gethomepage.dev/icon: homepage.png
          gethomepage.dev/name: Homepage
      spec:
        ingressClassName: ingress-nginx-internal
        rules:
        - host: homepage.<path:stringreplacesecret#domain>
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: homepage
                  port:
                    number: 3000
      ---
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      metadata:
        name: homepage
        namespace: homepage
        annotations:
          argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      spec:
        parentRefs:
        - name: internal
          namespace: gateway
          sectionName: https
        hostnames:
        - "homepage.<path:stringreplacesecret#domain>"
        rules:
        - backendRefs:
          - name: http
            port: 80
      ---
      apiVersion: externaldns.k8s.io/v1alpha1
      kind: DNSEndpoint
      metadata:
        name: homepage
        namespace: homepage
        annotations:
          external-dns.custom/type: private
          argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      spec:
        endpoints:
          - dnsName: homepage.<path:stringreplacesecret#domain>
            recordType: CNAME
            targets:
              - intgw.<path:stringreplacesecret#domain>
            providerSpecific:
              - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
                value: "false"
      ---
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/service-account-token
      metadata:
        name: homepage
        namespace: homepage
        labels:
          app.kubernetes.io/name: homepage
        annotations:
          kubernetes.io/service-account.name: homepage