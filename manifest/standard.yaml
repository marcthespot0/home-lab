apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: cache-claim0
  name: cache-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f standard.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: cache
  name: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: cache
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f standard.yaml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: cache
    spec:
      containers:
        - image: redis:6.0-alpine
          name: cache-self-hosted
          ports:
            - containerPort: 6379
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: cache-claim0
      restartPolicy: Always
      volumes:
        - name: cache-claim0
          persistentVolumeClaim:
            claimName: cache-claim0
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f standard.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: cache
  name: cache
spec:
  ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
  selector:
    io.kompose.service: cache
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: db-claim0
  name: db-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: db-claim1
  name: db-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f standard.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f standard.yaml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: standard_notes_db
            - name: MYSQL_PASSWORD
              value: changeme123
            - name: MYSQL_ROOT_PASSWORD
              value: changeme123
            - name: MYSQL_USER
              value: std_notes_user
          image: mysql:8
          name: db-self-hosted
          ports:
            - containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: db-claim0
            - mountPath: /docker-entrypoint-initdb.d
              name: db-claim1
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
        - name: db-claim1
          persistentVolumeClaim:
            claimName: db-claim1
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f standard.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: db
  name: db
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: db
---
apiVersion: v1
data:
  AUTH_JWT_SECRET: "39843923402"
  AUTH_SERVER_ENCRYPTION_SERVER_KEY: 4951-378453174384
  CACHE_TYPE: redis
  DB_DATABASE: standard_notes_db
  DB_HOST: db
  DB_PASSWORD: changeme123
  DB_PORT: "3306"
  DB_TYPE: mysql
  DB_USERNAME: std_notes_user
  REDIS_HOST: cache
  REDIS_PORT: "6379"
  VALET_TOKEN_SECRET: 341903531134kjfsl
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: server-env
  name: env
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f standard.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: localstack
  name: localstack
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: localstack
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f standard.yaml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: localstack
    spec:
      containers:
        - env:
            - name: HOSTNAME_EXTERNAL
              value: localstack
            - name: LS_LOG
              value: warn
            - name: SERVICES
              value: sns,sqs
          image: localstack/localstack:3.5
          name: localstack-self-hosted
          ports:
            - containerPort: 4566
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/localstack/init/ready.d/localstack_bootstrap.sh
              name: localstack-claim0
      restartPolicy: Always
      volumes:
        - name: localstack-claim0
          persistentVolumeClaim:
            claimName: localstack-claim0
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f standard.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: localstack
  name: localstack
spec:
  ports:
    - name: "4566"
      port: 4566
      targetPort: 4566
  selector:
    io.kompose.service: localstack
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: server-claim0
  name: server-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f standard.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: server
  name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: server
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f standard.yaml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: server
    spec:
      containers:
        - env:
            - name: AUTH_JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: AUTH_JWT_SECRET
                  name: env
            - name: AUTH_SERVER_ENCRYPTION_SERVER_KEY
              valueFrom:
                configMapKeyRef:
                  key: AUTH_SERVER_ENCRYPTION_SERVER_KEY
                  name: env
            - name: CACHE_TYPE
              valueFrom:
                configMapKeyRef:
                  key: CACHE_TYPE
                  name: env
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: DB_DATABASE
                  name: env
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: env
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DB_PASSWORD
                  name: env
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  key: DB_PORT
                  name: env
            - name: DB_TYPE
              valueFrom:
                configMapKeyRef:
                  key: DB_TYPE
                  name: env
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: DB_USERNAME
                  name: env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: env
            - name: VALET_TOKEN_SECRET
              valueFrom:
                configMapKeyRef:
                  key: VALET_TOKEN_SECRET
                  name: env
          image: standardnotes/server
          name: server-self-hosted
          ports:
            - containerPort: 3000
              protocol: TCP
            - containerPort: 3104
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/server/logs
              name: server-claim0
            - mountPath: /opt/server/packages/files/dist/uploads
              name: server-claim1
      restartPolicy: Always
      volumes:
        - name: server-claim0
          persistentVolumeClaim:
            claimName: server-claim0
        - name: server-claim1
          persistentVolumeClaim:
            claimName: server-claim1
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f standard.yaml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: server
  name: server
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    - name: "3125"
      port: 3125
      targetPort: 3104
  selector:
    io.kompose.service: server
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: server-claim1
  name: server-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: localstack-claim0
  name: localstack-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
