---
kind: Namespace
apiVersion: v1
metadata:
  name: test-zone
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo
  namespace: test-zone
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: echo
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echo
    spec:
      containers:
        - image: ealen/echo-server
          imagePullPolicy: Always
          name: echo
          ports:
            - containerPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo
  namespace: test-zone
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"    
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: echo.<path:stringreplacesecret#domain>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: echo
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: echo
  namespace: test-zone
  annotations:
    external-dns.alpha.kubernetes.io/hostname: echo.<path:stringreplacesecret#domain>
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app.kubernetes.io/name: echo
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: echo
  namespace: test-zone
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  hostnames:
  - "echo.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: echo
      port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: echo
  namespace: test-zone
  annotations:
    external-dns.custom/type: private
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  endpoints:
    - dnsName: echo.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "false"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: test-claim-nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: "freenas-nfs-csi"
spec:
  storageClassName: freenas-api-nfs
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi