---
kind: Namespace
apiVersion: v1
metadata:
  name: kube-system
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gatewaycrds
  namespace: argocd
spec:
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  project: homelab
  source:
    repoURL: https://github.com/acelinkio/empty.git
    path: .
    plugin:
      name: kustomize-inline
      env:
        - name: KUSTOMIZATION_YAML
          value: |
            apiVersion: kustomize.config.k8s.io/v1beta1
            kind: Kustomization
            resources:
              - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/standard/gateway.networking.k8s.io_gatewayclasses.yaml
              - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/standard/gateway.networking.k8s.io_httproutes.yaml
              - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/standard/gateway.networking.k8s.io_referencegrants.yaml
              - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/experimental/gateway.networking.k8s.io_gateways.yaml
              - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/experimental/gateway.networking.k8s.io_grpcroutes.yaml
              - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.0.0/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cilium
  namespace: argocd
spec:
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: cilium
    repoURL: https://helm.cilium.io/
    targetRevision: 1.15.6
    helm:
      valuesObject:
        autoDirectNodeRoutes: true
        bandwidthManager:
          enabled: true
          # rk1's run on 5.10 version of kernel, 5.12 is required
          bbr: false
        bpf:
          masquerade: true 
          hostLegacyRouting: true
        cluster:
          name: home-lab
          id: 1
        containerRuntime:
          integration: containerd
        #  socketPath: /var/run/k3s/containerd/containerd.sock
        #enableRuntimeDeviceDetection: true
        endpointRoutes:
          enabled: true
        hubble:
          enabled: true
          metrics:
            enabled:
              - dns:query
              - drop
              - tcp
              - flow
              - port-distribution
              - icmp
              - http
          relay:
            enabled: true
            rollOutPods: true
          ui:
            enabled: true
            rollOutPods: true
            ingress:
              enabled: false
        ipam:
          mode: kubernetes
        ipv4NativeRoutingCIDR: "10.69.0.0/16"
        k8sServiceHost: "192.168.1.170"
        k8sServicePort: 6443
        kubeProxyReplacement: true
        kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256
        l2announcements:
          enabled: true
        loadBalancer:
          algorithm: maglev
          mode: dsr
        localRedirectPolicy: true
        image:
          #testing https://github.com/cilium/cilium/issues/20942
          override: "quay.io/cilium/cilium-ci:e14988e02ce8d0f3451b177a4f97a3833df65ab3"
        operator:
          #testing https://github.com/cilium/cilium/issues/20942
          image:
            override: "quay.io/cilium/operator-generic-ci:e14988e02ce8d0f3451b177a4f97a3833df65ab3"
          replicas: 1
          rollOutPods: true
        rollOutCiliumPods: true
        routingMode: native
        gatewayAPI:
          enabled: true
          secretsNamespace:
            create: false
            name: certificate
  securityContext:
    privileged: true
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true
  ignoreDifferences:
    - group: core
      kind: ConfigMap
      name: hubble-ca-cert
      jsonPointers:
        - /data/ca.crt
    - group: core
      kind: Secret
      name: hubble-relay-client-certs
      jsonPointers:
        - /data/ca.crt
        - /data/tls.crt
        - /data/tls.key
    - group: core
      kind: Secret
      name: hubble-server-certs
      jsonPointers:
        - /data/ca.crt
        - /data/tls.crt
        - /data/tls.key
    - group: core
      kind: Secret
      name: cilium-ca
      jsonPointers:
        - /data/ca.crt
        - /data/ca.key
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hubble-http
  namespace: kube-system
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
    - host: hubble.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hubble-ui
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hubble-grpc
  namespace: kube-system
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
    - host: hubble.<path:stringreplacesecret#domain>
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hubble-ui
                port:
                  number: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: hubble
  namespace: kube-system
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  hostnames:
  - "hubble.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: hubble-ui
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: GRPCRoute
metadata:
  name: hubble
  namespace: kube-system
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  hostnames:
  - "hubble.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: hubble-ui
      port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: hubble
  namespace: kube-system
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: hubble.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "false"
---
apiVersion: cilium.io/v2alpha1
kind: CiliumL2AnnouncementPolicy
metadata:
  name: policy
spec:
  loadBalancerIPs: true
---
apiVersion: cilium.io/v2alpha1
kind: CiliumLoadBalancerIPPool
metadata:
  name: pool
spec:
  cidrs:
    - cidr: <path:stringreplacesecret#ciliumipamcidr>
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metrics-server
  namespace: argocd
spec:
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  project: homelab
  source:
    chart: metrics-server
    repoURL: https://kubernetes-sigs.github.io/metrics-server/
    targetRevision: 3.12.1
    helm:
      valuesObject:
        args:
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
        metrics:
          enabled: true
        serviceMonitor:
          enabled: false
  syncPolicy:
    automated:
      allowEmpty: true
      prune: true
      selfHeal: true