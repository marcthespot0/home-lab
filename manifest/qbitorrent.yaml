
---
kind: Namespace
apiVersion: v1
metadata:
  name: qbittorrent
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: qbittorrent
  namespace: qbittorrent
  labels:
    app.kubernetes.io/part-of: qbittorrent
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        QBIT_VAR_VPN_USERNAME:  "{{ .vpn_user }}"
        QBIT_VAR_VPN_PASSWORD:  "{{ .vpn_pass }}"
  data:
    - secretKey: vpn_user
      remoteRef:
        key: qbittorrent
        property: OPENVPN_USERNAME
    - secretKey: vpn_pass
      remoteRef:
        key: qbittorrent
        property: OPENVPN_PASSWORD
---
apiVersion: v1
kind: Service
metadata:
  name: qbittorrent
  namespace: qbittorrent
spec:
  type: ClusterIP
  selector:
    app: qbittorrent
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorent
  namespace: qbittorrent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      enableServiceLinks: true
      serviceAccountName: default
      automountServiceAccountToken: true
      # securityContext:
      #   fsGroup: 1000
      # hostIPC: false
      # hostNetwork: false
      # hostPID: false
      # dnsPolicy: ClusterFirst
      containers:
        - name: qbittorrent
          # image: lscr.io/linuxserver/qbittorrent:4.6.4
          image: binhex/arch-qbittorrentvpn:4.6.4-1-01
       securityContext:
          capabilities:
            add:
              - NET_ADMIN
          privileged: true
        ports:
        - containerPort: 6881
        - containerPort: 80
        - containerPort: 8118
        env:
        - name: VPN_ENABLED
          value: "yes"
        - name: VPN_USER
          value: 
        - name: VPN_PASS
          value:
        - name: VPN_PROV
          value: custom
        - name: VPN_CLIENT
          value: openvpn
        - name: LAN_OPTIONS
          value: "10.0.0.0/8"
        - name: DEBUG
          value: true
    # -e VPN_USER=<vpn username> \
    # -e VPN_PASS=<vpn password> \
    # -e VPN_PROV=<pia|airvpn|protonvpn|custom> \
    # -e VPN_CLIENT=<openvpn|wireguard> \
    # -e VPN_OPTIONS=<additional openvpn cli options> \
    # -e STRICT_PORT_FORWARD=<yes|no> \
    # -e ENABLE_PRIVOXY=<yes|no> \
    # -e ENABLE_STARTUP_SCRIPTS=<yes|no> \
    # -e LAN_NETWORK=<lan ipv4 network>/<cidr notation> \
    # -e NAME_SERVERS=<name server ip(s)> \
    # -e VPN_INPUT_PORTS=<port number(s)> \
    # -e VPN_OUTPUT_PORTS=<port number(s)> \
    # -e DEBUG=<true|false> \
    # -e WEBUI_PORT=<port for web interfance> \
    # -e UMASK=<umask for created files> \
    # -e PUID=<uid for user> \
    # -e PGID=<gid for user> \
        - name: PUID
          value: "1024"
        - name: PGID
          value: "100"
          # - name: TZ
          #   value: "American/New_York"
          # - name: UMASK_SET
          #   value: "022"
          # - name: WEBUI_PORT
          #   value: "8080"
        volumeMounts:
          - mountPath: /config
            name: qbittorrent-config
            subPath: qbittorrent/config
          - mountPath: /data
            name: qbittorrent-data
        # - name: gluten
        #   image: qmcgaw/gluetun:latest
        #   env:
        #   - name: VPN_SERVICE_PROVIDER
        #     value: "expressvpn"
        #   - name: FIREWALL_OUTBOUND_SUBNETS
        #     value: "192.168.1.0/24"
        #   - name: OPENVPN_USER
        #     value: "{{ .vpn_user }}"
        #   - name: OPENVPN_PASSWORD
        #     value: "{{ .vpn_user }}"
        #   securityContext:
        #     privileged: true
        #     allowPrivilegeEscalation: true
        #     capabilities:
        #       add:
        #         - NET_ADMIN
        #   volumeMounts:
        #     - mountPath: /config
        #       name: qbittorrent-config
        #       subPath: gluetun/config
      volumes:
        - name: qbittorrent-config
          persistentVolumeClaim:
            claimName: qbittorrent-config
        - name: qbittorrent-data
          persistentVolumeClaim:
            claimName: qbittorrent-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: qbittorrent
  name: qbittorrent-config
  namespace: qbittorrent
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 2Gi
--- 
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: qbittorrent-data
  namespace: qbittorrent
  annotations:
    volume.beta.kubernetes.io/storage-class: "freenas-nfs-csi"
spec:
  storageClassName: freenas-nfs-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: qbittorrent
  namespace: qbittorrent
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: qbittorrent.<path:stringreplacesecret#domain>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: qbittorrent
            port:
              number: 8080
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: qbittorrent
  namespace: qbittorrent
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  hostnames:
  - "qbittorrent.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: qbittorent
      port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: qbittorrent
  namespace: qbittorrent
  annotations:
    external-dns.custom/type: private
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  endpoints:
    - dnsName: qbittorrent.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "false"