---
# Source: outline/charts/redis/templates/scripts-configmap.yaml


apiVersion: v1
kind: ConfigMap
metadata:
  name: outline-redis-scripts
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.4
    helm.sh/chart: redis-18.19.4
data:
  start-master.sh: |
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    if [[ -f /opt/bitnami/redis/mounted-etc/master.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
    fi
    if [[ -f /opt/bitnami/redis/mounted-etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--protected-mode" "no")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
    exec redis-server "${ARGS[@]}"

---
# Source: outline/charts/redis/templates/configmap.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: outline-redis-configuration
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.4
    helm.sh/chart: redis-18.19.4
data:
  redis.conf: |-
    # User-supplied common configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    # End of common configuration
  master.conf: |-
    dir /data
    # User-supplied master configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of master configuration
  replica.conf: |-
    dir /data
    # User-supplied replica configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of replica configuration

---
# Source: outline/charts/redis/templates/health-configmap.yaml


apiVersion: v1
kind: ConfigMap
metadata:
  name: outline-redis-health
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.4
    helm.sh/chart: redis-18.19.4
data:
  ping_readiness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ] && [ "$responseFirstWord" != "MASTERDOWN" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status

---
# Source: outline/charts/postgresql/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: outline-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
automountServiceAccountToken: false

---
# Source: outline/charts/postgresql/templates/secrets.yaml

apiVersion: v1
kind: Secret
metadata:
  name: outline-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
type: Opaque
data:
  postgres-password: "TWEjd1hGTXo2akZxWFVyXnFQJks2NlhRYmQ="
  password: "dmg0cmZecTMyQmN2dEZxRlZqbnk0cG5N"
  # We don't auto-generate LDAP password when it's not provided as we do for other passwords

---
# Source: outline/templates/004-pvc.yaml

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: outline-data
  namespace: default
  labels:
    app: outline
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 250Gi

---
# Source: outline/charts/postgresql/templates/primary/svc.yaml


apiVersion: v1
kind: Service
metadata:
  name: outline-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
    app.kubernetes.io/component: primary
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
      nodePort: null
  selector:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary

---
# Source: outline/charts/redis/templates/master/application.yaml

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: outline-redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.4
    helm.sh/chart: redis-18.19.4
    app.kubernetes.io/component: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: outline
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: master
  serviceName: outline-redis-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: outline
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.2.4
        helm.sh/chart: redis-18.19.4
        app.kubernetes.io/component: master
      annotations:
        checksum/configmap: 86bcc953bb473748a3d3dc60b7c11f34e60c93519234d4c37f42e22ada559d47
        checksum/health: aff24913d801436ea469d8d374b2ddb3ec4c43ee7ab24663d5f8ff1a1b6991a9
        checksum/scripts: 43cdf68c28f3abe25ce017a82f74dbf2437d1900fd69df51a55a3edf6193d141
        checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
    spec:
      
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: outline-redis-master
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: outline
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/component: master
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      enableServiceLinks: true
      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: docker.io/bitnami/redis:7.2.4-debian-12-r9
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          command:
            - /bin/bash
          args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 1
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-data
              mountPath: /data
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: empty-dir
              mountPath: /opt/bitnami/redis/etc/
              subPath: app-conf-dir
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
      volumes:
        - name: start-scripts
          configMap:
            name: outline-redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: outline-redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: outline-redis-configuration
        - name: empty-dir
          emptyDir: {}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: redis-data
        labels:
          app.kubernetes.io/instance: outline
          app.kubernetes.io/name: redis
          app.kubernetes.io/component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        

---
# Source: outline/charts/redis/templates/headless-svc.yaml


apiVersion: v1
kind: Service
metadata:
  name: outline-redis-headless
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.4
    helm.sh/chart: redis-18.19.4
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
  selector:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/name: redis

---
# Source: outline/charts/redis/templates/master/service.yaml

apiVersion: v1
kind: Service
metadata:
  name: outline-redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.4
    helm.sh/chart: redis-18.19.4
    app.kubernetes.io/component: master
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  sessionAffinity: None
  ports:
    - name: tcp-redis
      port: 6379
      targetPort: redis
      nodePort: null
  selector:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: master

---
# Source: outline/charts/postgresql/templates/primary/svc-headless.yaml


apiVersion: v1
kind: Service
metadata:
  name: outline-postgresql-hl
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
    app.kubernetes.io/component: primary
  annotations:
    # Use this annotation in addition to the actual publishNotReadyAddresses
    # field below because the annotation will stop being respected soon but the
    # field is broken in some versions of Kubernetes:
    # https://github.com/kubernetes/kubernetes/issues/58662
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  # We want all pods in the StatefulSet to have their addresses published for
  # the sake of the other Postgresql pods even before they're ready, since they
  # have to be able to talk to each other in order to become ready.
  publishNotReadyAddresses: true
  ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary

---
# Source: outline/charts/redis/templates/master/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  name: outline-redis-master
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.4
    helm.sh/chart: redis-18.19.4

---
# Source: outline/charts/redis/templates/networkpolicy.yaml

kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: outline-redis
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.2.4
    helm.sh/chart: redis-18.19.4
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/instance: outline
      app.kubernetes.io/name: redis
  policyTypes:
    - Ingress
    - Egress
  egress:
    - {}
  ingress:
    # Allow inbound connections
    - ports:
        - port: 6379

---
# Source: outline/templates/001-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: outline
  namespace: default
spec:
  selector:
    matchLabels:
      app: outline
  replicas: 
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: outline
        release: outline
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
      initContainers:
        - name: storage-prepare
          image: busybox
          command: 
            - chown
            - -R
            - 1001:1001
            - /var/lib/outline/data
          volumeMounts:
          - name: outline-data
            mountPath: /var/lib/outline/data
      containers:
        - name: outline
          image: "outlinewiki/outline:0.78.0-0"
          imagePullPolicy: 
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: "production"
            - name: URL
              value: "https://outline.marcthespot.com"
            - name: PORT
              value: "3000"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "jgnfsY+6eb4pvaGHfehYWF3G950Ul95KbdUo63FHM1o="
                  key: outline-secret-key
            - name: UTILS_SECRET
              valueFrom:
                secretKeyRef:
                  name: "EMub4Hf64H3wVf2dtA+rfhVYhr+DdS1QCoLdQTrH3tc="
                  key: outline-utils-key
            - name: DATABASE_URL
              value: "postgres://outline:vh4rf^q32BcvtFqFVjny4pnM@outline-postgresql:5432/outline"
            - name: DATABASE_URL_TEST
              value: "postgres://outline:vh4rf^q32BcvtFqFVjny4pnM@outline-postgresql:5432/outline_test"

            - name: DATABASE_CONNECTION_POOL_MIN
              value: ""
            - name: DATABASE_CONNECTION_POOL_MAX
              value: "20"
            - name: PGSSLMODE
              value: "disable"
            - name: REDIS_URL
              value: "redis://outline-redis-master:6379"
            - name: FILE_STORAGE
              value: "local"
            - name: FILE_STORAGE_LOCAL_ROOT_DIR
              value: "/var/lib/outline/data"
            - name: FILE_STORAGE_UPLOAD_MAX_SIZE
              value: ""26214400""

            - name: COLLABORATION_URL
              value: "https://outline.marcthespot.com"
            - name: FORCE_HTTPS
              value: "false"
            - name: ENABLE_UPDATES
              value: "false"
            - name: WEB_CONCURRENCY
              value: "1"
            - name: FILE_STORAGE_IMPORT_MAX_SIZE
              value: ""5120000""
            - name: LOG_LEVEL
              value: "info"
            - name: GOOGLE_ANALYTICS_ID
              value: ""
            - name: SENTRY_DSN
              value: ""
            - name: SENTRY_TUNNEL
              value: ""

            - name: DEFAULT_LANGUAGE
              value: "en_US"
            - name: RATE_LIMITER_ENABLED
              value: "false"
            - name: RATE_LIMITER_REQUESTS
              value: "1000"
            - name: RATE_LIMITER_DURATION_WINDOW
              value: "60"
            - name: DEVELOPMENT_UNSAFE_INLINE_CSP
              value: "false"
            - name: SSL_KEY
              value: ""
            - name: SSL_CERT
              value: ""
            - name: CDN_URL
              value: ""
          volumeMounts:
          - name: outline-data
            mountPath: /var/lib/outline/data
      volumes:
      - name: outline-data
        persistentVolumeClaim:
          claimName: outline-data

---
# Source: outline/charts/postgresql/templates/primary/statefulset.yaml

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: outline-postgresql
  namespace: "default"
  labels:
    app.kubernetes.io/instance: outline
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/version: 16.1.0
    helm.sh/chart: postgresql-13.4.4
    app.kubernetes.io/component: primary
spec:
  replicas: 1
  serviceName: outline-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: outline
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: outline-postgresql
      labels:
        app.kubernetes.io/instance: outline
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/version: 16.1.0
        helm.sh/chart: postgresql-13.4.4
        app.kubernetes.io/component: primary
    spec:
      serviceAccountName: outline-postgresql
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: outline
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/component: primary
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      hostNetwork: false
      hostIPC: false
      containers:
        - name: postgresql
          image: docker.io/bitnami/postgresql:16.1.0-debian-11-r25
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRESQL_PORT_NUMBER
              value: "5432"
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data"
            # Authentication
            - name: POSTGRES_USER
              value: "outline"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: outline-postgresql
                  key: password
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: outline-postgresql
                  key: postgres-password
            - name: POSTGRES_DATABASE
              value: "outline"
            # Replication
            # Initdb
            # Standby
            # LDAP
            - name: POSTGRESQL_ENABLE_LDAP
              value: "no"
            # TLS
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Audit
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "false"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "false"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "false"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            # Others
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "outline" -d "dbname=outline" -h 127.0.0.1 -p 5432
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "outline" -d "dbname=outline" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            - name: data
              mountPath: /bitnami/postgresql
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
        

---
# Source: outline/templates/002-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: outline
  namespace: default
  labels:
    app: outline
    release: outline
spec:
  ports:
    - port: 3000
      targetPort: 3000
      name: web
  selector:
    app: outline
