---

kind: Namespace
apiVersion: v1
metadata:
  name: external-dns-unifi
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: external-dns-unifi
  namespace: external-dns-unifi
  labels:
    app.kubernetes.io/part-of: external-dns-unifi
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        EXTERNAL_DNS_UNIFI_USER: "{{ .unifi_user }}"
        EXTERNAL_DNS_UNIFI_PASS: "{{ .unifi_pass }}"
  data:
    - secretKey: unifi_user
      remoteRef:
        key: external-dns-unifi
        property: UNIFI_USER
    - secretKey: unifi_pass
      remoteRef:
        key: external-dns-unifi
        property: UNIFI_PASS
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-dns-unifi
spec:
  destination:
    namespace: external-dns-unifi
  source:
    repoURL: https://github.com/kashalls/external-dns-unifi-webhook.git
    targetRevision: main
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  project: default

configMapGenerator:
- name: external-dns-unifi-config
  literals:
  - name: UNIFI_HOST
    value: https://192.168.1.1
  - name: LOG_LEVEL
    value: debug

env:
  - name: UNIFI_USER
    secretKeyRef:
      name: external-dns-unifi
      key: UNFI_USER
  - name: UNIFI_PASS
    secretKeyRef:
      name: external-dns-unifi
      key: UNIFI_PASS

livenessProbe:
  httpGet:
    path: /healthz
    port: http-wh-metrics
  initialDelaySeconds: 10
  timeoutSeconds: 5

readinessProbe:
  httpGet:
    path: /readyz
    port: http-wh-metrics
  initialDelaySeconds: 10
  timeoutSeconds: 5

extraArgs:
- --ignore-ingress-tls-spec

policy:
  sync: true

sources:
- ingress
- service

txtOwnerId: default
txtPrefix: k8s.
domainFilters:
- marcthespot.com