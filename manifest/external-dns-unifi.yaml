---
# Source: external-dns/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns-unifi
  namespace: external-dns
  labels:
    helm.sh/chart: external-dns-1.14.3
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns-unifi
    app.kubernetes.io/version: "0.14.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken:
---
# Source: external-dns/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns-unifi
  labels:
    helm.sh/chart: external-dns-1.14.3
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns-unifi
    app.kubernetes.io/version: "0.14.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list","watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get","watch","list"]
  - apiGroups: [""]
    resources: ["services","endpoints"]
    verbs: ["get","watch","list"]
  - apiGroups: ["extensions","networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get","watch","list"]
---
# Source: external-dns/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-unifi-viewer
  labels:
    helm.sh/chart: external-dns-1.14.3
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns-unifi
    app.kubernetes.io/version: "0.14.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns-unifi
subjects:
  - kind: ServiceAccount
    name: external-dns-unifi
    namespace: external-dns
---
# Source: external-dns/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: external-dns-unifi
  namespace: external-dns
  labels:
    helm.sh/chart: external-dns-1.14.3
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns-unifi
    app.kubernetes.io/version: "0.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns-unifi
  ports:
    - name: http
      port: 7979
      targetPort: http
      protocol: TCP
---
# Source: external-dns/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns-unifi
  namespace: external-dns
  labels:
    helm.sh/chart: external-dns-1.14.3
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/instance: external-dns-unifi
    app.kubernetes.io/version: "0.14.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: external-dns
      app.kubernetes.io/instance: external-dns-unifi
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: external-dns
        app.kubernetes.io/instance: external-dns-unifi
    spec:
      serviceAccountName: external-dns-unifi
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: external-dns
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: registry.k8s.io/external-dns/external-dns:v0.14.0
          imagePullPolicy: IfNotPresent
          args:
            - --log-level=debug
            - --log-format=text
            - --interval=1m
            - --source=ingress
            - --source=service
            - --policy=sync
            - --registry=txt
            - --txt-owner-id=default
            - --txt-prefix=k8s.
            - --domain-filter=marcthespot.com
            - --provider=webhook
            - --ignore-ingress-tls-spec
          ports:
            - name: http
              protocol: TCP
              containerPort: 7979
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
        - name: webhook
          image: ghcr.io/kashalls/external-dns-unifi-webhook:main
          imagePullPolicy: IfNotPresent
          env:
            - name: UNIFI_HOST
              value: https://192.168.1.1
            - name: UNIFI_USER
              value: externaldns
            - name: UNIFI_PASS
              value: Externaldns123
            - name: LOG_LEVEL
              value: debug
          ports:
            - name: http-webhook
              protocol: TCP
              containerPort: 8888
            - name: http-wh-metrics
              protocol: TCP
              containerPort: 8080
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: http-wh-metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /readyz
              port: http-wh-metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
