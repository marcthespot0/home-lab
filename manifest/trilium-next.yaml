---
kind: Namespace
apiVersion: v1
metadata:
  name: triliumnxt
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: triliumnxt-pvc
  namespace: triliumnxt
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: triliumnxt
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  project: default
  source:
    chart: app-template
    repoURL: https://bjw-s-labs.github.io/helm-charts
    targetRevision: 4.4.0
    helm:
      values: |
        controllers:
          triliumnxt:
            # type: statefulset
            initContainers:
              init-config:
                image:
                  repository: public.ecr.aws/docker/library/busybox
                  tag: latest@sha256:9ae97d36d26566ff84e8893c64a6dc4fe8ca6d1144bf5b87b2b85a32def253c7
                  pullPolicy: IfNotPresent
                command:
                  - "/bin/sh"
                  - "-c"
                  - "chmod -R 777 /trilium-data"
            containers:
              app:
                image:
                  repository: ghcr.io/triliumnext/notes
                  pullPolicy: IfNotPresent
                  tag: v0.99.1
                env:
                  TZ: America/New_York
                  TRILIUM_DATA_DIR: &datadir /trilium-data
        service:
          app :
            controller: triliumnxt
            ports:
              http:
                port: 8080
        persistence:
          trilium-data:
            existingClaim: triliumnxt-pvc
            globalMounts:
              - path: *datadir 
  destination:
    server: https://kubernetes.default.svc
    namespace: triliumnxt
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: triliumnxt
  namespace: triliumnxt
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: triliumnxt.<path:stringreplacesecret#domain>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: triliumnxt
            port:
              number: 8080
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: triliumnxt
  namespace: triliumnxt
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https    
  - name: external
    namespace: gateway
    sectionName: https
  hostnames:
  - "triliumnxt.<path:stringreplacesecret#domain>"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: triliumnxt
      port: 8080
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: triliumnxt-external
  namespace: triliumnxt
  annotations:
    external-dns.custom/type: public
spec:
  endpoints:
    - dnsName: triliumnxt.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - ingress.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "true"
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: triliumnxt
  namespace: triliumnxt
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: triliumnxt.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
      providerSpecific:
