---
kind: Namespace
apiVersion: v1
metadata:
  name: glance
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: glance
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  project: default
  source:
    chart: app-template
    repoURL: http://bjw-s.github.io/helm-charts/
    targetRevision: 3.7.3
    helm:
      values: |
        # fullnameOverride: *name
        # defaultPodOptions:
        #   securityContext:
        #     runAsNonRoot: true
        #     runAsUser: 1022
        #     runAsGroup: 1022
        #     fsGroup: 1022
        #     fsGroupChangePolicy: OnRootMismatch
        #     seccompProfile:
        #       type: RuntimeDefault
        controllers:
          glance:
            strategy: RollingUpdate
            annotations:
              reloader.stakater.com/auto: "true"
            containers:
              glance:
                image:
                  repository: glanceapp/glance
                  tag: v0.7.3@sha256:ecf8c49224cff1264fc028eea9a91cd8fb5aab39ab75c0bebd30235ef42d0cab
                args:
                  - --config
                  - /config/glance.yaml
                env:
                  TZ: "${TIMEZONE}"
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  capabilities: { drop: ["ALL"] }
        service:
          app:
            controller: glance
            type: ClusterIP
            ports:
              http:
                port: 8080
        persistence:
           config:
             enabled: true
             type: configMap
             name: glance-configmap
           data:
            enabled: true
            existingClaim: glance
            advancedMounts:
              glance:
                app:
                  - path: /config/glance.yaml
          #  config-storage:
          #    enabled: true
          #    type: emptyDir
          #    globalMounts:
          #      - path: /config
  destination:
    server: https://kubernetes.default.svc
    namespace: glance
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: glance-configmap
  namespace: glance
  labels:
    app.kubernetes.io/name: glance
data:
  glance.yaml: |
    theme:
      background-color: 240 21 15
      contrast-multiplier: 1.2
      primary-color: 217 92 83
      positive-color: 115 54 76
      negative-color: 347 70 65
    pages:
      - name: Home
        columns:
          - size: small
            widgets:
              - type: weather
                units: imperial
                location: New York, New York

              - type: bookmarks
                groups:
                  - links:
                      - title: Home Operations
                        url: https://github.com/marcthespot0/home-lab
                        icon: si:gitlab
                      - title: Github
                        url: https://github.com/
                        icon: si:github
                      - title: Reddit
                        url: https://www.reddit.com/
                        icon: si:reddit
                      - title: NixOs Search
                        url: https://search.nixos.org/packages/
                        icon: si:nixos
                  
                  - title: Entertainment
                    color: 10 70 50
                    links:
                      - title: YouTube
                        url: https://www.youtube.com/
                        icon: si:youtube
                      - title: YouTube Music
                        url: https://music.youtube.com/
                        icon: si:youtubemusic
                      - title: Netflix
                        url: https://www.netflix.com/
                        icon: si:netflix
                      - title: Prime Video
                        url: https://www.primevideo.com/
                        icon: si:prime

              - type: releases
                show-source-icon: true
                repositories:
                  - glanceapp/glance

              - type: monitor
                cache: 1m
                title: Services
                sites:
                  - title: Gatus
                    url: https://status.${DOMAIN}
                    icon: di:gatus
                  - title: Grafana
                    url: https://grafana.${DOMAIN}
                    icon: di:grafana

          - size: full
            widgets:
              - type: search
                search-engine: duckduckgo
                bangs:
                  - title: YouTube
                    shortcut: "!yt"
                    url: https://www.youtube.com/results?search_query={QUERY}

              - type: rss
                style: horizontal-cards
                feeds:
                  - url: https://selfh.st/rss/
                    title: selfh.st

              - type: reddit
                subreddit: selfhosted

              - type: reddit
                subreddit: unixporn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: glance
  name: glance
  namespace: glance
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 2Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: glance-ingress
  namespace: glance
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: glance.<path:stringreplacesecret#domain>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: glance
            port:
              number: 8080
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: glance-http
  namespace: glance
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
    - name: internal
      namespace: gateway
      sectionName: https
    - name: external
      namespace: gateway
      sectionName: https
  hostnames:
  - "glance.<path:stringreplacesecret#domain>"
  rules:
    - backendRefs:
      - name: glance
        port: 80
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: glance-external
  namespace: glance
  annotations:
    external-dns.custom/type: public
spec:
  endpoints:
    - dnsName: glance.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - ingress.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "true"
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: glance
  namespace: glance
  annotations:
    external-dns.custom/type: private
spec:
  endpoints:
    - dnsName: glance.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
      providerSpecific: