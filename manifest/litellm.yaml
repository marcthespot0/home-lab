---
kind: Namespace
apiVersion: v1
metadata:
  name: litellm
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: litellm-secrets
  namespace: litellm
  labels:
    app.kubernetes.io/part-of: litellm
  annotations:
    # argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  refreshInterval: "5m"
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        LITELLM_MASTER_KEY: "{{ .LITELLM_MASTER_KEY }}"
        LITELLM_SALT_KEY: "{{ .LITELLM_SALT_KEY }}"

  data:
    - secretKey: LITELLM_MASTER_KEY
      remoteRef:
        key: litellm-secrets
        property: master_key
    - secretKey: LITELLM_SALT_KEY
      remoteRef:
        key: litellm-secrets
        property: salt_key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litellm-deployment
  namespace: litellm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: litellm
  template:
    metadata:
      labels:
        app: litellm
    spec:
      containers:
      - name: litellm
        image: ghcr.io/berriai/litellm:main-latest
        ports:
        - containerPort: 4000
        env:
        - name: LITELLM_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: litellm-secrets
              key: LITELLM_MASTER_KEY
        - name: LITELLM_SALT_KEY
          valueFrom:
            secretKeyRef:
              name: litellm-secrets
              key: LITELLM_SALT_KEY
          STORE_MODEL_IN_DB: True
          DATABASE_URL: postgres://{{ .username }}:{{ .password }}@postgres.cluster01.litellm.owner:5432/litellm
        volumeMounts:
        - name: litellm-volume
          mountPath: /app/config.yaml
      volumes:
      - name: litellm-volume
        persistentVolumeClaim:
          claimName: litellm-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: litellm
  name: litellm-pvc
  namespace: litellm
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: litellm
  namespace: litellm
spec:
  type: LoadBalancer
  ports:
  - port: 4000
    targetPort: 4000
  selector:
    app: litellm
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: litellm-ingress
  namespace: litellm
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: ingress-nginx-internal
  rules:
  - host: litellm.<path:stringreplacesecret#domain>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: litellm
            port:
              number: 4000
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: litellm-http
  namespace: litellm
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  parentRefs:
  - name: internal
    namespace: gateway
    sectionName: https
  hostnames:
  - "litellm.<path:stringreplacesecret#domain>"
  rules:
  - backendRefs:
    - name: litellm
      port: 4000
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: litellm
  namespace: litellm
  annotations:
    external-dns.custom/type: private
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  endpoints:
    - dnsName: litellm.<path:stringreplacesecret#domain>
      recordType: CNAME
      targets:
        - intgw.<path:stringreplacesecret#domain>
      providerSpecific:
        - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
          value: "false"